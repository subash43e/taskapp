// Firebase Firestore Security Rules
// This file should be deployed to your Firebase project

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can only access their own data
    match /users/{userId} {
      // Allow read/write if the requesting user matches the document userId
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // User's tasks subcollection
      match /tasks/{taskId} {
        // Allow read/write if the requesting user matches the parent userId
        allow read, write: if request.auth != null && request.auth.uid == userId;
        
        // Ensure userId field matches the authenticated user when creating/updating
        allow create: if request.auth != null 
          && request.auth.uid == userId 
          && request.auth.uid == resource.data.userId;
          
        allow update: if request.auth != null 
          && request.auth.uid == userId 
          && request.auth.uid == resource.data.userId;
      }
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

/*
DEPLOYMENT INSTRUCTIONS:

1. Go to your Firebase Console
2. Navigate to Firestore Database
3. Go to the "Rules" tab
4. Replace the existing rules with the rules above
5. Click "Publish"

WHAT THESE RULES DO:

1. **User Authentication Required**: All operations require authentication
2. **User Data Isolation**: Users can only access their own data under /users/{userId}
3. **Task Isolation**: Users can only access their own tasks under /users/{userId}/tasks/{taskId}
4. **Data Integrity**: Ensures the userId field matches the authenticated user
5. **Complete Lockdown**: Denies all other access patterns

STRUCTURE:
/users/{userId}/tasks/{taskId}

EXAMPLE:
/users/abc123/tasks/task456
- Only user with uid="abc123" can read/write this task

BENEFITS:
- Complete data isolation between users
- Prevents data leakage between accounts  
- Server-side security (not just client-side)
- Follows Firebase security best practices
*/